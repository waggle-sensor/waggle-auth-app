services:
  django:
    build:
      context: ../../
      dockerfile: ./env/dev/Dockerfile 
    restart: always
    command: >
      sh -c "python manage.py migrate && 
             python manage.py createsuperuser --noinput || true &&
             python manage.py setup_wireguard &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    environment:
      # superuser login
      - "DJANGO_SETTINGS_MODULE=config.settings.dev"
      - "DJANGO_SUPERUSER_USERNAME=admin"
      - "DJANGO_SUPERUSER_EMAIL=admin@example.com"
      - "DJANGO_SUPERUSER_PASSWORD=admin"
      # Static file settings.
      - "STATIC_ROOT=/app/staticfiles"
      # S3 settings
      - "S3_ENDPOINT=sdsc.osn.xsede.org"
      - "S3_ACCESS_KEY=${S3_ACCESS_KEY}"
      - "S3_SECRET_KEY=${S3_SECRET_KEY}"
      - "S3_BUCKET_NAME=sage"
      - "S3_ROOT_FOLDER=node-data"
      - "S3_REGION=us-west-2"
      # Pelican settings
      - "PELICAN_KEY_PATH=${PELICAN_KEY_PATH}"
      - "PELICAN_ALGORITHM=ES256"
      - "PELICAN_KEY_ID=${PELICAN_KEY_ID}"
      - "PELICAN_ISSUER=https://sagecontinuum.org"
      - "PELICAN_LIFETIME=60"
      - "PELICAN_ROOT_URL=https://nrdstor.nationalresearchplatform.org:8443/sage"
      - "PELICAN_ROOT_FOLDER=/node-data"
      - "INV_TOOLS_REPO=/app/waggle-inventory-tools"
      #NOTE: uncomment these lines for automatic updates of the inventory tools repo
      # - "INV_TOOLS_REPO=https://github.com/waggle-sensor/waggle-inventory-tools.git"
      # - "INV_TOOLS_TOKEN=${INV_TOOLS_TOKEN}" 
      - "INV_TOOLS_SSH_TOOLS=/root/git"
      - "INV_TOOLS_SSH_CONFIG=/root/ssh"
      - "INV_TOOLS_SSH_TOOLS_PW=${INV_TOOLS_SSH_TOOLS_PW}" 
      - "WG_PRIV_KEY=${WG_PRIV_KEY}"
      - "WG_PUB_KEY=${WG_PUB_KEY}"
    volumes:
      - ../../:/app:rw
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun
    sysctls:
      net.ipv4.ip_forward: 1
      net.ipv6.conf.all.disable_ipv6: 0
    networks:
      - backend
    depends_on:
      - wireguard
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    privileged: true
    environment:
      - PUID=0
      - PGID=0
      - TZ=UTC
    volumes:
      - /lib/modules:/lib/modules
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.conf.all.src_valid_mark: 1
    restart: unless-stopped
    devices:
      - /dev/net/tun
    healthcheck:
      test: ["CMD-SHELL", "wg show wg0 >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - backend
networks:
  backend:
    driver: bridge